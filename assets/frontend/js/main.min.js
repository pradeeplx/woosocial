!function(o,t){var a={cache:function(){a.els={},a.vars={},a.els.actions_list=o(".jck-woosocial-actions"),a.els.tab_links=o(".jck-woosocial-profile-link"),a.els.tab_content=o(".jck-woosocial-tab-content"),a.els.load_more_button=o(".jck-woosocial-load-more"),a.els.action_blocks=o(".jck-woosocial-action"),a.els.likes_container=o(".jck-woosocial-user-likes"),a.els.add_to_cart_buttons=o(".jck-woosocial-add-to-cart-wrapper .add_to_cart_button"),a.els.tick_icon=o('<i class="jck-woosocial-ic-tick"></i>'),a.els.loading_icon=o('<i class="jck-woosocial-ic-loading jck-woosocial-spin"></i>'),a.vars.action_offset=1,a.vars.is_hidden_class="jck-woosocial--is-hidden"},on_ready:function(){a.cache(),a.setup_follow_actions(),a.setup_like_action(),a.setup_tabs(),a.setup_load_more(),a.setup_activity_log(),a.add_to_cart()},on_scroll:function(){a.scroll_activity_log()},setup_follow_actions:function(){o(".jck-woosocial-follow-action").on("click",function(){var t=o(this),s=t.attr("data-user-id"),i=t.attr("data-type"),c="jck-woosocial-follow-action--loading";"login"===i||t.hasClass(c)||(t.addClass(c),o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_follow_action",nonce:jck_woosocial_vars.nonce,user_id:s,type:i},success:function(s){t.text(s.button.text),t.attr("data-type",s.button.type),t.removeClass(c),t.removeClass("jck-woosocial-follow-action--"+i),t.addClass("jck-woosocial-follow-action--"+s.button.type),s.add_follow_html&&a.els.actions_list.prepend(s.add_follow_html),s.remove_follow_class&&o(s.remove_follow_class).remove()},error:function(o){}}))})},setup_like_action:function(){o(t).on("click",".jck-woosocial-like-action",function(){var t=o(this),a=t.closest(".jck-woosocial-likes"),s=t.attr("data-product-id"),i=t.attr("data-type"),c=t.find(".jck-woosocial-like-button__count"),e="jck-woosocial-follow-action--loading";return t.hasClass(e)||(t.addClass(e),o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_like_action",nonce:jck_woosocial_vars.nonce,product_id:s,type:i},success:function(o){if(c.length>0){var s=parseInt(c.text()),n="like"===i?s+1:s-1;c.text(n),t.attr("data-type",o.button.type),t.removeClass(e),t.removeClass("jck-woosocial-like-action--"+i),t.addClass("jck-woosocial-like-action--"+o.button.type),o.add_like_html&&a.find(".jck-woosocial-likes__item--like-button").after(o.add_like_html),o.remove_like_class&&a.find(o.remove_like_class).remove()}},error:function(o){}})),!1})},setup_tabs:function(){a.els.tab_links.on("click",function(){var t=o(this).attr("href"),s="jck-woosocial-profile-link--active";return a.els.tab_links.removeClass(s),o(this).addClass(s),a.els.tab_content.hide(),o(t).show(),eqjs.refreshNodes(),eqjs.query(),!1})},setup_load_more:function(){a.els.load_more_button.on("click",function(){o(this).hasClass("jck-woosocial-load-more--activity")&&a.load_more_activity(o(this)),o(this).hasClass("jck-woosocial-load-more--likes")&&a.load_more_likes(o(this))})},load_more_activity:function(t){var a=parseInt(t.attr("data-limit")),s=parseInt(t.attr("data-offset")),i=a+s,c=t.attr("data-user-id"),e=t.attr("data-profile-user-id"),n=t.parent();o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_load_more_activity",nonce:jck_woosocial_vars.nonce,limit:a,offset:s,user_id:c,profile_user_id:e},success:function(o){o.activity_html?(n.before(o.activity_html),t.attr("data-offset",i)):n.remove()},error:function(o){}})},load_more_likes:function(t){var s=parseInt(t.attr("data-limit")),i=parseInt(t.attr("data-offset")),c=s+i,e=t.attr("data-user-id");o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_load_more_likes",nonce:jck_woosocial_vars.nonce,limit:s,offset:i,user_id:e},success:function(o){o.likes_html?(a.els.likes_container.append(o.likes_html),t.attr("data-offset",c)):t.remove()},error:function(o){}})},setup_activity_log:function(){a.hide_actions(a.els.action_blocks,a.vars.action_offset)},hide_actions:function(t,s){t.each(function(){o(this).offset().top>o(window).scrollTop()+o(window).height()*s&&o(this).find(".jck-woosocial-action__icon, .jck-woosocial-action__wrapper").css({opacity:0}).addClass(a.vars.is_hidden_class)})},show_actions:function(t,s){t.each(function(){o(this).offset().top<=o(window).scrollTop()+o(window).height()*s&&o(this).find(".jck-woosocial-action__icon").hasClass(a.vars.is_hidden_class)&&o(this).find(".jck-woosocial-action__icon, .jck-woosocial-action__wrapper").removeClass(a.vars.is_hidden_class).animate({opacity:1})})},scroll_activity_log:function(){window.requestAnimationFrame?window.requestAnimationFrame(function(){a.show_actions(a.els.action_blocks,a.vars.action_offset)}):setTimeout(function(){a.show_actions(a.els.action_blocks,a.vars.action_offset)},100)},add_to_cart:function(){a.els.add_to_cart_buttons.on("click",function(){var t=o(this),s=t.text();t.attr("data-button-text",s).append(a.els.loading_icon)}),o(t.body).on("added_to_cart",function(o,t,s,i){var c=i.closest(".jck-woosocial-add-to-cart-wrapper"),e=i.attr("data-button-text");c.length>0&&(i.html(e).append(a.els.tick_icon),setTimeout(function(){i.html(e)},2e3))})}};o(t).ready(a.on_ready()),o(window).on("scroll",function(){a.on_scroll()})}(jQuery,document);
//# sourceMappingURL=data:application/json;base64,