!function(o,a){var t={cache:function(){t.els={},t.vars={},t.vars.is_hidden_class="jck-woosocial--is-hidden",t.vars.animate_spin_class="jck-woosocial-spin",t.vars.add_to_cart_buttons_class=".jck-woosocial-add-to-cart-wrapper .add_to_cart_button",t.vars.card_grid_cards_class=".jck-woosocial-card-grid .jck-woosocial-card",t.vars.card_hover_class="jck-woosocial-card--hover",t.els.document_body=o(a.body),t.els.actions_list=o(".jck-woosocial-actions"),t.els.tab_links=o(".jck-woosocial-profile-link"),t.els.tab_content=o(".jck-woosocial-tab-content"),t.els.load_more_button=o(".jck-woosocial-load-more"),t.els.action_blocks=o(".jck-woosocial-action"),t.els.likes_container=o(".jck-woosocial-user-likes"),t.els.add_to_cart_buttons=o(".jck-woosocial-add-to-cart-wrapper .add_to_cart_button"),t.els.tick_icon=o('<i class="jck-woosocial-ic-tick"></i>'),t.els.loading_icon=o('<i class="jck-woosocial-ic-loading jck-woosocial-spin"></i>'),t.els.card_grids=o(".jck-woosocial-card-grid"),t.els.breakpoint_elements=o("[data-breakpoints]"),t.els.breakpoints=[]},on_ready:function(){t.cache(),t.setup_follow_actions(),t.setup_product_like_action(),t.setup_tabs(),t.setup_load_more(),t.add_to_cart(),t.setup_breakpoints(),t.check_breakpoints(),t.setup_cards()},on_scroll:function(){},on_resize:function(){t.check_breakpoints()},setup_follow_actions:function(){o(".jck-woosocial-follow-action").on("click",function(){var a=o(this),s=a.attr("data-user-id"),c=a.attr("data-type"),i="jck-woosocial-follow-action--loading";"login"!==c&&(a.hasClass(i)||(a.addClass(i),o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_follow_action",nonce:jck_woosocial_vars.nonce,user_id:s,type:c},success:function(o){a.text(o.button.text),a.attr("data-type",o.button.type),a.removeClass(i),a.removeClass("jck-woosocial-follow-action--"+c),a.addClass("jck-woosocial-follow-action--"+o.button.type),o.add_follow_html&&t.els.actions_list.prepend(o.add_follow_html)},error:function(o){}})))})},setup_product_like_action:function(){o(a).on("click",".jck-woosocial-product-like-action",function(){{var a=o(this),t=a.closest(".jck-woosocial-product-likes"),s=a.attr("data-product-id"),c=a.attr("data-type"),i=a.find(".jck-woosocial-product-like-button__count"),e="jck-woosocial-product-like-action--loading",n=a.find("i");a.closest(".jck-woosocial-action")}return"login"!==c?(a.hasClass(e)||(a.addClass(e),o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_product_like_action",nonce:jck_woosocial_vars.nonce,product_id:s,type:c},success:function(o){if(i.length>0){var s=parseInt(i.text()),l="like"===c?s+1:s-1;i.text(l),a.attr("data-type",o.button.type),a.removeClass(e),a.removeClass("jck-woosocial-product-like-action--"+c),a.addClass("jck-woosocial-product-like-action--"+o.button.type),"unlike"===o.button.type?n.attr("class","jck-woosocial-ic-heart-full"):n.attr("class","jck-woosocial-ic-heart"),o.add_like_html&&t.find(".jck-woosocial-product-likes__item--like-button").after(o.add_like_html),o.remove_like_class&&t.find(o.remove_like_class).remove()}},error:function(o){}})),!1):void 0})},setup_tabs:function(){t.els.tab_links.on("click",function(){var a=o(this).attr("href"),s="jck-woosocial-profile-link--active";return t.els.tab_links.removeClass(s),o(this).addClass(s),t.els.tab_content.hide(),o(a).show(),t.check_breakpoints(),!1})},spin_icon_start:function(o){o.addClass(t.vars.animate_spin_class)},spin_icon_stop:function(o){o.removeClass(t.vars.animate_spin_class)},disable_load_more_button:function(o){o.html(jck_woosocial_vars.strings.no_more).removeAttr("href").addClass("jck-woosocial-load-more--disabled")},setup_load_more:function(){t.els.load_more_button.on("click",function(){var a=o(this),s=a.find("i");return a.hasClass("jck-woosocial-load-more--disabled")?!1:(t.spin_icon_start(s),o(this).hasClass("jck-woosocial-load-more--activity")&&t.load_more_activity(o(this),function(){t.spin_icon_stop(s)}),void(o(this).hasClass("jck-woosocial-load-more--likes")&&t.load_more_likes(o(this),function(){t.spin_icon_stop(s)})))})},load_more_activity:function(a,s){var c=parseInt(a.attr("data-limit")),i=parseInt(a.attr("data-offset")),e=c+i,n=a.attr("data-user-id"),l=a.attr("data-profile-user-id"),r=a.closest("li");o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_load_more_activity",nonce:jck_woosocial_vars.nonce,limit:c,offset:i,user_id:n,profile_user_id:l},success:function(o){o.activity_html?(r.before(o.activity_html),a.attr("data-offset",e)):t.disable_load_more_button(a),void 0!==s&&s(o)},error:function(o){}})},load_more_likes:function(a,s){var c=parseInt(a.attr("data-limit")),i=parseInt(a.attr("data-offset")),e=c+i,n=a.attr("data-user-id");o.ajax({type:"GET",url:jck_woosocial_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woosocial_load_more_likes",nonce:jck_woosocial_vars.nonce,limit:c,offset:i,user_id:n},success:function(o){o.likes_html?(t.els.likes_container.append(o.likes_html),a.attr("data-offset",e)):t.disable_load_more_button(a),void 0!==s&&s(o)},error:function(o){}})},add_to_cart:function(){t.els.document_body.on("click",t.vars.add_to_cart_buttons_class,function(){var a=o(this),s=a.text();a.attr("data-button-text",s).append(t.els.loading_icon)}),t.els.document_body.on("added_to_cart",function(o,a,s,c){var i=c.closest(".jck-woosocial-add-to-cart-wrapper"),e=c.attr("data-button-text");i.length>0&&(c.html(e).append(t.els.tick_icon),setTimeout(function(){c.html(e)},2e3))})},setup_breakpoints:function(){t.els.breakpoint_elements.length>0&&t.els.breakpoint_elements.each(function(a,s){var c=o(s),i=c.attr("data-breakpoints"),e=o.parseJSON(i),n={element:c,breakpoints:e,width:0};t.els.breakpoints.push(n)}),t.els.document_body.on("element_width_change",function(o,a){t.update_breakpoints(a)})},check_breakpoints:function(){t.els.breakpoints.length>0&&o.each(t.els.breakpoints,function(o,a){var s=a.width,c=a.element.width();c!==s&&(a.width=c,t.els.document_body.trigger("element_width_change",[a]))})},update_breakpoints:function(a){var t=!1;o.each(a.breakpoints,function(o,s){a.width<=s.max_width&&(t?s.max_width<=t&&(t=s.max_width):t=s.max_width)}),o.each(a.breakpoints,function(o,s){s.max_width===t?a.element.addClass(s["class"]):a.element.removeClass(s["class"])})},setup_cards:function(){t.els.document_body.hoverIntent(function(){var a=o(this);a.addClass(t.vars.card_hover_class)},function(){var a=o(this);a.removeClass(t.vars.card_hover_class)},t.vars.card_grid_cards_class)}};o(a).ready(t.on_ready()),o(window).on("scroll",function(){t.on_scroll()}),o(window).on("resize",function(){t.on_resize()})}(jQuery,document);
//# sourceMappingURL=data:application/json;base64,