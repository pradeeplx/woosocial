!function(o,a){var t={cache:function(){t.els={},t.vars={},t.els.$actions_list=o(".jck_woo_social-actions"),t.els.$tab_links=o(".jck_woo_social-tab-link"),t.els.$tab_content=o(".jck_woo_social-tab-content"),t.els.$load_more_button=o(".jck_woo_social-load-more"),t.els.$action_blocks=o(".jck_woo_social-action"),t.els.$likes_container=o(".jck_woo_social-likes"),t.vars.action_offset=1,t.vars.is_hidden_class="jck_woo_social--is-hidden"},on_ready:function(){t.cache(),t.setup_follow_actions(),t.setup_like_action(),t.setup_tabs(),t.setup_load_more(),t.setup_activity_log()},on_scroll:function(){t.scroll_activity_log()},setup_follow_actions:function(){o(".jck_woo_social-follow-action").on("click",function(){var a=o(this),s=a.attr("data-user-id"),i=a.attr("data-type"),c="jck_woo_social-follow-action--loading";"login"===i||a.hasClass(c)||(a.addClass(c),o.ajax({type:"GET",url:jck_woo_social_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woo_social_follow_action",nonce:jck_woo_social_vars.nonce,user_id:s,type:i},success:function(s){a.text(s.button.text),a.attr("data-type",s.button.type),a.removeClass(c),a.removeClass("jck_woo_social-follow-action--"+i),a.addClass("jck_woo_social-follow-action--"+s.button.type),s.add_follow_html&&t.els.$actions_list.prepend(s.add_follow_html),s.remove_follow_class&&o(s.remove_follow_class).remove()},error:function(o){}}))})},setup_like_action:function(){o(a).on("click",".jck-woo-social-like-action",function(){var a=o(this),t=a.closest(".jck-woo-social-likes"),s=a.attr("data-product-id"),i=a.attr("data-type"),c=a.find(".jck-woo-social-like-button__count"),e="jck_woo_social-follow-action--loading";return a.hasClass(e)||(a.addClass(e),o.ajax({type:"GET",url:jck_woo_social_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woo_social_like_action",nonce:jck_woo_social_vars.nonce,product_id:s,type:i},success:function(o){if(c.length>0){var s=parseInt(c.text()),n="like"===i?s+1:s-1;c.text(n),a.attr("data-type",o.button.type),a.removeClass(e),a.removeClass("jck_woo_social-like-action--"+i),a.addClass("jck_woo_social-like-action--"+o.button.type),o.add_like_html&&t.find(".jck-woo-social-likes__item--like-button").after(o.add_like_html),o.remove_like_class&&t.find(o.remove_like_class).remove()}},error:function(o){}})),!1})},setup_tabs:function(){t.els.$tab_links.on("click",function(){var a=o(this).attr("href"),s="jck_woo_social-tab-link--active";return t.els.$tab_links.removeClass(s),o(this).addClass(s),t.els.$tab_content.hide(),o(a).show(),!1})},setup_load_more:function(){t.els.$load_more_button.on("click",function(){o(this).hasClass("jck_woo_social-load-more--activity")&&t.load_more_activity(o(this)),o(this).hasClass("jck_woo_social-load-more--likes")&&t.load_more_likes(o(this))})},load_more_activity:function(a){var t=parseInt(a.attr("data-limit")),s=parseInt(a.attr("data-offset")),i=t+s,c=a.attr("data-user-id"),e=a.attr("data-profile-user-id"),n=a.parent();o.ajax({type:"GET",url:jck_woo_social_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woo_social_load_more_activity",nonce:jck_woo_social_vars.nonce,limit:t,offset:s,user_id:c,profile_user_id:e},success:function(o){o.activity_html?(n.before(o.activity_html),a.attr("data-offset",i)):n.remove()},error:function(o){}})},load_more_likes:function(a){var s=parseInt(a.attr("data-limit")),i=parseInt(a.attr("data-offset")),c=s+i,e=a.attr("data-user-id");o.ajax({type:"GET",url:jck_woo_social_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woo_social_load_more_likes",nonce:jck_woo_social_vars.nonce,limit:s,offset:i,user_id:e},success:function(o){o.likes_html?(t.els.$likes_container.append(o.likes_html),a.attr("data-offset",c)):a.remove()},error:function(o){}})},setup_activity_log:function(){t.hide_actions(t.els.$action_blocks,t.vars.action_offset)},hide_actions:function(a,s){a.each(function(){o(this).offset().top>o(window).scrollTop()+o(window).height()*s&&o(this).find(".jck_woo_social-action__icon, .jck_woo_social-action__wrapper").css({opacity:0}).addClass(t.vars.is_hidden_class)})},show_actions:function(a,s){a.each(function(){o(this).offset().top<=o(window).scrollTop()+o(window).height()*s&&o(this).find(".jck_woo_social-action__icon").hasClass(t.vars.is_hidden_class)&&o(this).find(".jck_woo_social-action__icon, .jck_woo_social-action__wrapper").removeClass(t.vars.is_hidden_class).animate({opacity:1})})},scroll_activity_log:function(){window.requestAnimationFrame?window.requestAnimationFrame(function(){t.show_actions(t.els.$action_blocks,t.vars.action_offset)}):setTimeout(function(){t.show_actions(t.els.$action_blocks,t.vars.action_offset)},100)}};o(a).ready(t.on_ready()),o(window).on("scroll",function(){t.on_scroll()})}(jQuery,document);
//# sourceMappingURL=data:application/json;base64,