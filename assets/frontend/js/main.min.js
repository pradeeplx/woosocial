!function(o,a){var t={cache:function(){t.els={},t.vars={},t.els.$actions_list=o(".jck_woo_social-actions"),t.els.$tab_links=o(".jck_woo_social-tab-link"),t.els.$tab_content=o(".jck_woo_social-tab-content")},on_ready:function(){t.cache(),t.setup_follow_actions(),t.setup_like_action(),t.setup_tabs()},setup_follow_actions:function(){o(".jck_woo_social-follow-action").on("click",function(){var a=o(this),c=a.attr("data-user-id"),l=a.attr("data-follow-type"),s="jck_woo_social-follow-action--loading";"login"===l||a.hasClass(s)||(a.addClass(s),o.ajax({type:"GET",url:jck_woo_social_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woo_social_follow_action",nonce:jck_woo_social_vars.nonce,user_id:c,type:l},success:function(c){a.text(c.button.text),a.attr("data-follow-type",c.button.type),a.removeClass(s),a.removeClass("jck_woo_social-follow-action--"+l),a.addClass("jck_woo_social-follow-action--"+c.button.type),c.add_follow_html&&t.els.$actions_list.prepend(c.add_follow_html),c.remove_follow_class&&o(c.remove_follow_class).remove()},error:function(o){}}))})},setup_like_action:function(){o(a).on("click",".jck-woo-social-like-action",function(){var a=o(this),t=a.closest(".jck-woo-social-likes"),c=a.attr("data-product-id"),l=a.attr("data-type"),s=a.find(".jck-woo-social-like-button__count"),e="jck_woo_social-follow-action--loading";return a.hasClass(e)||(a.addClass(e),o.ajax({type:"GET",url:jck_woo_social_vars.ajax_url,cache:!1,dataType:"jsonp",crossDomain:!0,data:{action:"jck_woo_social_like_action",nonce:jck_woo_social_vars.nonce,product_id:c,type:l},success:function(o){if(s.length>0){var c=parseInt(s.text()),i="like"===l?c+1:c-1;s.text(i),a.attr("data-type",o.button.type),a.removeClass(e),a.removeClass("jck_woo_social-like-action--"+l),a.addClass("jck_woo_social-like-action--"+o.button.type),o.add_like_html&&t.find(".jck-woo-social-likes__item--like-button").after(o.add_like_html),o.remove_like_class&&t.find(o.remove_like_class).remove()}},error:function(o){}})),!1})},setup_tabs:function(){t.els.$tab_links.on("click",function(){var a=o(this).attr("href"),c="jck_woo_social-tab-link--active";return t.els.$tab_links.removeClass(c),o(this).addClass(c),t.els.$tab_content.hide(),o(a).show(),!1})}};o(a).ready(t.on_ready())}(jQuery,document);
//# sourceMappingURL=data:application/json;base64,